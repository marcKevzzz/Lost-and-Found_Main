/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package user;

import admin.ClaimCard;
import admin.ViewClaim;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;

/**
 *
 * @author QCU
 */
public final class ClaimItem extends javax.swing.JFrame {

    /**
     * Creates new form ClaimItem
     */
    public ClaimItem() {
        initComponents();
        loadAllClaims();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        panelClaim = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 700));

        jPanel6.setBackground(new java.awt.Color(0, 0, 204));
        jPanel6.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel6.setPreferredSize(new java.awt.Dimension(82, 700));

        jPanel7.setOpaque(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(70, 60));

        jLabel6.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("QCU");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(0, 51, 255));
        jPanel8.setMinimumSize(new java.awt.Dimension(32, 20));
        jPanel8.setOpaque(false);
        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel7.setBackground(new java.awt.Color(51, 51, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Found Item ");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel8.add(jLabel7, java.awt.BorderLayout.CENTER);

        jLabel9.setBackground(new java.awt.Color(153, 153, 255));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Profile");
        jLabel9.setPreferredSize(new java.awt.Dimension(35, 20));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 51, 255));
        jPanel9.setMinimumSize(new java.awt.Dimension(32, 20));
        jPanel9.setOpaque(false);

        jLabel10.setBackground(new java.awt.Color(51, 51, 255));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Pending Report");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(0, 51, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(32, 20));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel8.setBackground(new java.awt.Color(51, 51, 255));
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Claim Item ");
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel10.add(jLabel8, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        panelClaim.setOpaque(false);
        panelClaim.setPreferredSize(new java.awt.Dimension(1212, 584));

        javax.swing.GroupLayout panelClaimLayout = new javax.swing.GroupLayout(panelClaim);
        panelClaim.setLayout(panelClaimLayout);
        panelClaimLayout.setHorizontalGroup(
            panelClaimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1212, Short.MAX_VALUE)
        );
        panelClaimLayout.setVerticalGroup(
            panelClaimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelClaim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelClaim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        new ItemDisplay().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        new Profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        new PendingReportItem().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    void loadAllClaims() {
        panelClaim.removeAll(); // Clear the panel first
        panelClaim.setLayout(new BoxLayout(panelClaim, BoxLayout.Y_AXIS));
        panelClaim.add(Box.createRigidArea(new Dimension(0, 20)));
        ItemDisplay it = new ItemDisplay();

        if (Session.userId != null) {
            try (Connection con = DBConnection.DataBase.getConnection()) {

                // --- 1st: Load Retrieval Items (Provide Information)
                JLabel lblRetrieval = new JLabel("Contact Information (Provide Information For Item Retrieval)");
                lblRetrieval.setFont(new Font("Segoe UI Variable", Font.BOLD, 20));
                lblRetrieval.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 0));
                panelClaim.add(lblRetrieval);

                boolean hasRetrieval = false;

                String queryRetrieval = "SELECT ir.*, ct.claimDate, ct.retrievalInfo, ct.status_claim "
                        + "FROM itemreport ir "
                        + "JOIN claims_tbl ct ON ir.id = ct.claimId "
                        + "WHERE ct.userId = ? AND (ct.status_claim='Claim Approved' OR ct.status_claim = 'Claim Request') AND (ir.status='Claim Request' OR ir.status='Claim Approved')";

                ResultSet rsRetrieval;
                try (PreparedStatement psRetrieval = con.prepareStatement(queryRetrieval)) {
                    psRetrieval.setInt(1, Session.userId);
                    rsRetrieval = psRetrieval.executeQuery();
                    while (rsRetrieval.next()) {
                        hasRetrieval = true;

                        UserGetInfo cards = new UserGetInfo();

                        Timestamp timestamp = rsRetrieval.getTimestamp("timestamp");
                        String sdf = it.getTimeAgo(timestamp);

                        cards.getClaimInfo(
                                rsRetrieval.getString("name"),
                                rsRetrieval.getString("studentNum"),
                                rsRetrieval.getString("yearSec"),
                                rsRetrieval.getString("email"),
                                rsRetrieval.getString("phone"),
                                sdf,
                                rsRetrieval.getString("retrievalInfo"),
                                rsRetrieval.getString("status"),
                                rsRetrieval.getInt("id")
                        );

                        System.out.println(rsRetrieval.getString("name"));
                        System.out.println( rsRetrieval.getString("studentNum"));
                        System.out.println( rsRetrieval.getString("yearSec"));
                        System.out.println(rsRetrieval.getString("email"));
                        System.out.println( rsRetrieval.getString("phone"));
                        System.out.println(  sdf);
                        System.out.println(  rsRetrieval.getString("retrievalInfo"));
                        System.out.println(rsRetrieval.getInt("id"));

                        cards.setAlignmentX(Component.LEFT_ALIGNMENT);
                        panelClaim.add(cards);
                        panelClaim.add(Box.createVerticalStrut(10));
                    }
                    if (!hasRetrieval) {
                        JLabel lbl = new JLabel("No Items To Provide Info");
                        lbl.setFont(new Font("Segoe UI Semilight", Font.PLAIN, 14));
                        lbl.setBorder(BorderFactory.createEmptyBorder(10, 20, 0, 0));
                        panelClaim.add(lbl);
                    }
                }
                rsRetrieval.close();

                // --- 2nd: Load Pending Claims (Get Item)
                JLabel lblPendingClaim = new JLabel("Item Retrieval (Get your belongings)");
                lblPendingClaim.setFont(new Font("Segoe UI Variable", Font.BOLD, 20));
                lblPendingClaim.setBorder(BorderFactory.createEmptyBorder(30, 10, 10, 0)); // More space
                panelClaim.add(lblPendingClaim);

                boolean hasPendingClaim = false;

                String queryPending = "SELECT ir.*, ct.claimDate, ct.retrievalInfo, ct.status_claim "
                        + "FROM itemreport ir "
                        + "JOIN claims_tbl ct ON ir.id = ct.claimId "
                        + "WHERE (ct.status_claim = 'Claimed' OR ct.status_claim = 'Claim Approved') AND (ir.status='Claim Approved' OR ir.status='Claimed') AND ct.whoclaim = ?";

                ResultSet rsPending;
                try (PreparedStatement psPending = con.prepareStatement(queryPending)) {
                    psPending.setInt(1, Session.userId);
                    rsPending = psPending.executeQuery();
                    while (rsPending.next()) {
                        hasPendingClaim = true;

                        UserClaimComponents card = new UserClaimComponents();
                        Timestamp timestamp = rsPending.getTimestamp("timestamp");
                        String sdf = it.getTimeAgo(timestamp);

                        card.setClaimInfo(
                                rsPending.getString("name"),
                                rsPending.getString("studentNum"),
                                rsPending.getString("yearSec"),
                                rsPending.getString("email"),
                                rsPending.getString("phone"),
                                sdf,
                                rsPending.getString("retrievalInfo"),
                                rsPending.getString("status"),
                                rsPending.getInt("id")
                        );
                        System.out.println(rsPending.getInt("id"));

                        card.setAlignmentX(Component.LEFT_ALIGNMENT);
                        panelClaim.add(card);
                        panelClaim.add(Box.createVerticalStrut(10));
                    }
                    if (!hasPendingClaim) {
                        JLabel lbl = new JLabel("No Claimed Items");
                        lbl.setFont(new Font("Segoe UI Semilight", Font.PLAIN, 14));
                        lbl.setBorder(BorderFactory.createEmptyBorder(10, 20, 0, 0));
                        panelClaim.add(lbl);
                    }
                }
                rsPending.close();

                // --- Final Refresh
                panelClaim.revalidate();
                panelClaim.repaint();

            } catch (SQLException ex) {
                Logger.getLogger(ViewClaim.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JLabel lbl = new JLabel("No Claiming Item");
            lbl.setFont(new Font("Segoe UI Semilight", Font.PLAIN, 14));
            lbl.setBorder(BorderFactory.createEmptyBorder(10, 20, 0, 0));
            panelClaim.add(lbl);
        }
    }

//    void loadGetClaimDetails() {
//        panelClaim.add(Box.createRigidArea(new Dimension(0, 50)));
//
//        JLabel lbl1 = new JLabel("Item Retrieval (Get your belongings)");
//        lbl1.setFont(new Font("Segoe UI Variable", Font.BOLD, 20));
//        lbl1.setBorder(BorderFactory.createEmptyBorder(20, 10, 0, 0));
//        panelClaim.add(lbl1);
//        panelClaim.setLayout(new BoxLayout(panelClaim, BoxLayout.Y_AXIS));
//        setVisible(true);
//
//        if (Session.userId != null) {
//            try (Connection con = DBConnection.DataBase.getConnection()) {
//                String query = "SELECT * FROM itemreport WHERE reportId = ? AND status='Pending Claim'";
//                PreparedStatement pstmt = con.prepareStatement(query);
//                pstmt.setInt(1, Session.userId);
//                ResultSet rs = pstmt.executeQuery();
//
//                boolean hasData = false;
//
//                while (rs.next()) {
//                    int claimId = rs.getInt("id"); // Get claimId from itemreport
//
//                    String queryClaim = "SELECT * FROM claims_tbl WHERE claimId = ?";
//                    PreparedStatement ps = con.prepareStatement(queryClaim);
//                    ps.setInt(1, claimId);
//                    ResultSet rst = ps.executeQuery();
//
//                    if (rst.next()) {
//                        hasData = true;
//
//                        UserClaimComponents card = new UserClaimComponents();
//                        Timestamp timestamp = rst.getTimestamp("claimDate");
//                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss a");
//                        String formattedDate = sdf.format(timestamp);
//
//                        card.getClaimInfo(
//                                rs.getString("name"),
//                                rs.getString("studentNum"),
//                                rs.getString("yearSec"),
//                                rs.getString("email"),
//                                rs.getString("phone"),
//                                formattedDate,
//                                rst.getString("retrievalInfo"),
//                                claimId
//                        );
//
//                        card.setAlignmentX(Component.LEFT_ALIGNMENT);
//                        panelClaim.add(card);
//                        panelClaim.add(Box.createVerticalStrut(10));
//                    }
//                    rst.close();
//                    ps.close();
//                }
//
//                if (!hasData) {
//                    JLabel lbl = new JLabel("No Claiming Item");
//                    lbl.setFont(new Font("Segoe UI Semilight", Font.PLAIN, 14));
//                    lbl.setBorder(BorderFactory.createEmptyBorder(10, 20, 0, 0));
//                    panelClaim.add(lbl);
//                }
//
//                panelClaim.revalidate();
//                panelClaim.repaint();
//
//            } catch (SQLException ex) {
//                Logger.getLogger(ViewClaim.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } else {
//            JLabel lbl = new JLabel("No Claiming Item");
//            lbl.setFont(new Font("Segoe UI Semilight", Font.PLAIN, 14));
//            lbl.setBorder(BorderFactory.createEmptyBorder(10, 20, 0, 0));
//            panelClaim.add(lbl);
//        }
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClaimItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClaimItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClaimItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClaimItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClaimItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel panelClaim;
    // End of variables declaration//GEN-END:variables
}
